name: 1d. Custom Composite Action Outputs
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & cache dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps-output
        with: 
          caching: 'false'
#This output of this action could be usef in the workflow after using this action
#We add a dynamic expression and refer to the previous step by using id cache-deps (line 13)
#Then, we add the output that I defined which is used-cache (an action.yml file line 17)
      - name: Output information
        run: echo 'Cache used? ${{ steps.cache-deps.outputs.used-cache }}'
#It will print the output value of this custom action step -> Load & cache dependencies in a Output information step
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps-output
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps-output
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        run: echo "Deploying..."

#In a GitHub Action workflow, in a lint job in an Output information step, it prints the output from a Custom Action Step

